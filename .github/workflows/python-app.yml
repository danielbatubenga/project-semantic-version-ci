name: Python API CI

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - release/*
      - hotfix/*
  pull_request:
    branches:
      - main
      - develop
      - feature/*
      - release/*
      - hotfix/*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Flask

    - name: Read version from VERSION file
      id: get_version
      run: |
        VERSION=$(cat VERSION)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t myapi:${{ env.VERSION }} .

    - name: Docker Login
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: |
        docker tag myapi:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/myapi:${{ env.VERSION }}
        docker push ${{ secrets.DOCKER_USERNAME }}/myapi:${{ env.VERSION }}

  bump_version:
    runs-on: ubuntu-latest
    needs: build  # Este job depende do job 'build'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Bump version
      run: |
        # Incrementa a versÃ£o em todas as branches
        pip install semantic-version
        NEW_VERSION=$(python -c "import semantic_version; v = semantic_version.Version('$(cat VERSION)'); print(v.next_patch())")
        echo "${NEW_VERSION}" > VERSION
        echo "VERSION=${NEW_VERSION}" >> $GITHUB_ENV